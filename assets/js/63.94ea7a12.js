(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{544:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("h1",{attrs:{id:"锁的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的分类"}},[t._v("#")]),t._v(" 锁的分类")]),t._v(" "),s("h2",{attrs:{id:"偏向锁-轻量级锁-重量级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁-轻量级锁-重量级锁"}},[t._v("#")]),t._v(" 偏向锁/轻量级锁/重量级锁")]),t._v(" "),s("p",[t._v("这3种锁特指"),s("code",[t._v("synchronized")]),t._v("的状态。")]),t._v(" "),s("h3",{attrs:{id:"偏向锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁"}},[t._v("#")]),t._v(" 偏向锁")]),t._v(" "),s("h3",{attrs:{id:"轻量级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁"}},[t._v("#")]),t._v(" 轻量级锁")]),t._v(" "),s("h3",{attrs:{id:"重量级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重量级锁"}},[t._v("#")]),t._v(" 重量级锁")]),t._v(" "),s("p",[t._v("重量级锁是互斥锁。是利用操作系统的同步机制实现的，所以开销比较大。")]),t._v(" "),s("h2",{attrs:{id:"可重入锁和非可重入锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可重入锁和非可重入锁"}},[t._v("#")]),t._v(" 可重入锁和非可重入锁")]),t._v(" "),s("p",[t._v("重入锁"),s("code",[t._v("ReentrantLock")]),t._v("。指的是线程当前已经持有这把锁了，能在不释放这把锁的情况下，再次获取这把锁。")]),t._v(" "),s("p",[t._v("同理，不可重入锁指的是虽然线程当前持有了这把锁，但是如果想再次获取这把锁，也必须要先释放锁后才能再次尝试获取。")]),t._v(" "),s("h2",{attrs:{id:"共享锁和独占锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享锁和独占锁"}},[t._v("#")]),t._v(" 共享锁和独占锁")]),t._v(" "),s("p",[t._v("共享锁是指同一把锁可以被多个线程同时获得。独占锁就是指一把锁同时只能被一个线程获得。")]),t._v(" "),s("p",[t._v("读写锁就很好地诠释了共享锁和独占锁的理念。读写锁中的读锁，是共享锁，而写锁是独占锁。读锁可以被同时读，可以同时被多个线程持有，而写锁最多只能同时被一个线程持有。")]),t._v(" "),s("h2",{attrs:{id:"公平锁和非公平锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平锁和非公平锁"}},[t._v("#")]),t._v(" 公平锁和非公平锁")]),t._v(" "),s("h3",{attrs:{id:"什么是公平和非公平？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是公平和非公平？"}},[t._v("#")]),t._v(" 什么是公平和非公平？")]),t._v(" "),s("p",[t._v("公平锁是指按照线程请求的顺序来分配锁。非公平锁是指在一定情况下，线程可以插队。")]),t._v(" "),s("p",[t._v("当然非公平并不能随意插队。假设当前线程在请求获取锁时，恰巧前一个持有这把锁的线程释放了锁，那么当前线程就可以选择插队直接获取到这把锁。反之，如果当前线程请求的时候，锁没有释放，那么这个线程还是会乖乖地进入等待队列。")]),t._v(" "),s("h3",{attrs:{id:"为什么要设置非公平策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要设置非公平策略"}},[t._v("#")]),t._v(" 为什么要设置非公平策略")]),t._v(" "),s("p",[t._v("非公平策略是"),s("code",[t._v("ReentrantLock")]),t._v("的默认策略，可见该策略还是很重要的。那么为什么要设置该策略呢？这不是对其他线程不公平？")]),t._v(" "),s("h2",{attrs:{id:"悲观锁和乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁和乐观锁"}},[t._v("#")]),t._v(" 悲观锁和乐观锁")]),t._v(" "),s("h3",{attrs:{id:"悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁"}},[t._v("#")]),t._v(" 悲观锁")]),t._v(" "),s("p",[t._v("字如其名，悲观锁很悲观。它认为不锁住这个资源，别的线程就会来抢。所以它在每次获取修改数据时，都把数据锁住，让其他线程无法访问该数据。这样来确保数据的正确性。")]),t._v(" "),s("h3",{attrs:{id:"乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[t._v("#")]),t._v(" 乐观锁")]),t._v(" "),s("p",[t._v("乐观锁比较乐观。他认为自己在操作资源的时候，不会有其他线程来干扰。所以它不会锁住被操作的资源。")]),t._v(" "),s("p",[t._v("同时为了确保数据的正确性，在更新资源之前，它会去对比数据，看看在它操作数据的期间，数据有没有被其他线程修改过。")]),t._v(" "),s("p",[t._v("如果没被修改，那就说明真的只有自己在操作，那就正常更新数据。如果发现数据和刚开始拿到的不一样了，它就会认为自己迟了一步，并放弃这次修改，选择重试、报错等其他策略。")]),t._v(" "),s("h3",{attrs:{id:"典型的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#典型的应用"}},[t._v("#")]),t._v(" 典型的应用")]),t._v(" "),s("ul",[s("li",[t._v("悲观锁：synchronized关键字和Lock接口")])]),t._v(" "),s("p",[t._v("比如Lock接口的实现类"),s("code",[t._v("ReentrantLock")]),t._v("。类中的"),s("code",[t._v("lock()")]),t._v("等方法就是执行加锁，"),s("code",[t._v("unLock()")]),t._v("方法就是执行解锁。")]),t._v(" "),s("p",[t._v("处理资源之前必须先加锁并拿到锁，等到处理完了再解开锁。")]),t._v(" "),s("ul",[s("li",[t._v("乐观锁：原子类")])]),t._v(" "),s("p",[t._v("例如 "),s("code",[t._v("AtomicInteger")]),t._v(" 在更新数据时，就使用了乐观锁的思想，多个线程可以同时操作同一个原子变量。")]),t._v(" "),s("ul",[s("li",[t._v("又喜又悲：数据库")])]),t._v(" "),s("h2",{attrs:{id:"自旋锁和非自旋锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自旋锁和非自旋锁"}},[t._v("#")]),t._v(" 自旋锁和非自旋锁")]),t._v(" "),s("p",[t._v("自旋锁的理念是如果线程现在拿不到锁，并不直接陷入堵塞或者释放CPU资源，而是开始利用循环，不停地尝试获取这把锁。")]),t._v(" "),s("p",[t._v("相反，非自旋锁就是拿不到锁就放弃，去干其他事情。")]),t._v(" "),s("h2",{attrs:{id:"可中断锁和不可中断锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可中断锁和不可中断锁"}},[t._v("#")]),t._v(" 可中断锁和不可中断锁")]),t._v(" "),s("p",[t._v("synchronized 关键字修饰的锁代表的是不可中断锁。一旦线程申请了锁，就没有回头路了。只有等拿到锁以后才能进行其他的逻辑处理。")]),t._v(" "),s("p",[t._v("而"),s("code",[t._v("ReentrantLock")]),t._v("就是一种典型的可中断锁。例如使用"),s("code",[t._v("lockInterruptibly")]),t._v("方法在获取锁的过程中，突然不想获取了，那么也可以在中断之后去做其他的事情，不需要一直傻等到获取到锁才离开。")]),t._v(" "),s("h1",{attrs:{id:"monitor锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monitor锁"}},[t._v("#")]),t._v(" Monitor锁")]),t._v(" "),s("p",[t._v("最简单的同步方式就是利用 synchronized 关键字来修饰代码块或者修饰一个方法。而 synchronized 的背后正是利用 monitor 锁实现的。")]),t._v(" "),s("h1",{attrs:{id:"lock接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock接口"}},[t._v("#")]),t._v(" Lock接口")]),t._v(" "),s("h2",{attrs:{id:"lock接口简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock接口简介"}},[t._v("#")]),t._v(" Lock接口简介")]),t._v(" "),s("p",[s("code",[t._v("Lock")]),t._v("接口是Java5引入的。最常见的实现类是"),s("code",[t._v("ReentrantLock")]),t._v("。可以起到锁的作用。")]),t._v(" "),s("p",[t._v("通常情况下，"),s("code",[t._v("Lock")]),t._v("接口只允许一个线程操作共享资源。当然也有例外，比如读写锁可以允许多个线程并发的访问共享资源。")]),t._v(" "),s("h2",{attrs:{id:"常见方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见方法"}},[t._v("#")]),t._v(" 常见方法")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法总览")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trtLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Timeunit")]),t._v(" unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lockInterruptibly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"读写锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读写锁"}},[t._v("#")]),t._v(" 读写锁")]),t._v(" "),s("p",[t._v("读写锁在同一时刻允许多个读线程访问，但是在写线程访问时，所有的读线程和其他写线程均被堵塞。")]),t._v(" "),s("h3",{attrs:{id:"读写锁使用案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读写锁使用案例"}},[t._v("#")]),t._v(" 读写锁使用案例")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("java.util.concurrent.locks.ReadWriteLock")])])]),t._v(" "),s("p",[s("code",[t._v("ReadWriteLock")]),t._v("接口仅定义了获取读锁和写锁的两个方法。即"),s("code",[t._v("readLock()")]),t._v("和"),s("code",[t._v("WriteLock")]),t._v("方法。")]),t._v(" "),s("p",[s("code",[t._v("ReentrantReadWriteLock")]),t._v("是它的实现类，提供了一些便于外界监控内部工作状态的方法。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReadWriteLockDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantReadWriteLock")]),t._v(" rwl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" \t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantReadWriteLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rwl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rwl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);