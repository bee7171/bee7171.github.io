(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{545:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-线程池基本原理的介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-线程池基本原理的介绍"}},[s._v("#")]),s._v(" 1.线程池基本原理的介绍")]),s._v(" "),a("h2",{attrs:{id:"_2-创建和停止线程池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建和停止线程池"}},[s._v("#")]),s._v(" 2.创建和停止线程池")]),s._v(" "),a("h3",{attrs:{id:"_2-1-线程池构造函数的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线程池构造函数的参数"}},[s._v("#")]),s._v(" 2.1 线程池构造函数的参数")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("corePoolSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" maximumPoolSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" keepAliveTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" milliseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" runnableTaskQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[a("strong",[a("code",[s._v("corePoolSize")]),s._v("（类型："),a("code",[s._v("int")]),s._v("）")])]),s._v(" "),a("p",[a("strong",[s._v("核心线程数")]),s._v("。线程池在完成初始化后，默认情况下线程池中是没有任何线程的。线程池会等待有任务到来时，再去创建新线程去执行任务。")])]),s._v(" "),a("li",[a("p",[a("strong",[a("code",[s._v("maximumPoolSize")]),s._v("（类型："),a("code",[s._v("int")]),s._v("）")])]),s._v(" "),a("p",[a("strong",[s._v("最大线程数")]),s._v("。线程池有可能在核心线程的基础上再额外增加一些线程。但这些新增加的线程会有一个上限。")]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://bee71-1302549720.cos.ap-shanghai.myqcloud.com/微信截图_20200722163947.png"}})]),s._v(" "),a("li",[a("p",[a("strong",[a("code",[s._v("keepAliveTime")]),s._v("（类型："),a("code",[s._v("long")]),s._v("）")])]),s._v(" "),a("p",[a("strong",[s._v("保持存活时间")]),s._v("。如果线程池当前线程数量多于"),a("code",[s._v("corePoolSize")]),s._v("，如果多余的线程空闲时间超过"),a("code",[s._v("keepAliveTime")]),s._v("，那么它们就会被终止。")])]),s._v(" "),a("li",[a("p",[a("strong",[a("code",[s._v("workQueue")]),s._v("（类型："),a("code",[s._v("BlockQueue")]),s._v("）")])]),s._v(" "),a("p",[s._v("任务存储队列")])]),s._v(" "),a("li",[a("p",[a("strong",[a("code",[s._v("threadFactory")]),s._v("（类型："),a("code",[s._v("ThreadFactory")]),s._v("）")])]),s._v(" "),a("p",[a("strong",[s._v("用来创建线程")]),s._v("。当线程池需要新的线程的时候，会使用"),a("code",[s._v("threadFactory")]),s._v("来创建新的线程。")])]),s._v(" "),a("li",[a("p",[a("strong",[a("code",[s._v("handler")]),s._v("（类型："),a("code",[s._v("RejectedExecutionHandler")]),s._v("）")])]),s._v(" "),a("p",[s._v("由于线程池无法接受你所提交的任务的拒绝策略。")])])]),s._v(" "),a("h3",{attrs:{id:"_2-2-线程池的添加线程规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-线程池的添加线程规则"}},[s._v("#")]),s._v(" 2.2 线程池的添加线程规则")]),s._v(" "),a("ol",[a("li",[s._v("如果线程数小于"),a("code",[s._v("corePoolSize")]),s._v("，即使其他工作线程处于空闲状态，也会再创建一个新线程来运行任务。")]),s._v(" "),a("li",[s._v("如果线程数等于（或大于）"),a("code",[s._v("corePoolSize")]),s._v("，但少于"),a("code",[s._v("maximumPoolSize")]),s._v("。则将任务放进队列。")]),s._v(" "),a("li",[s._v("如果队列已满，并且线程数小于"),a("code",[s._v("maximumPoolSize")]),s._v("。则创建一个新线程来运行任务。")])]),s._v(" "),a("h3",{attrs:{id:"_2-3-增减线程的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-增减线程的特点"}},[s._v("#")]),s._v(" 2.3 增减线程的特点")]),s._v(" "),a("ul",[a("li",[s._v("通过设置"),a("code",[s._v("corePoolSize")]),s._v("和"),a("code",[s._v("maximumPoolSize")]),s._v("大小相同，就可以创建一个固定大小的线程池。")]),s._v(" "),a("li",[s._v("线程池希望保持较少的线程数。并且只有在负载变得很大时才会去增加线程。")]),s._v(" "),a("li",[a("code",[s._v("maximumPoolSize")]),s._v("可以设置成很高的值， 所以说可以允许线程池容纳任意数量的并发任务。")]),s._v(" "),a("li",[s._v("任务队列填满时才会创建多于"),a("code",[s._v("corePoolSize")]),s._v("的线程。所以如果使用的是无界队列，那么线程池就不会超过"),a("code",[s._v("corePoolSize")]),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"_2-4-工作队列workqueue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-工作队列workqueue"}},[s._v("#")]),s._v(" 2.4 工作队列"),a("code",[s._v("workQueue")])]),s._v(" "),a("p",[s._v("有3种最常见的队列类型：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("直接交接："),a("code",[s._v("SynchronousQueue")]),s._v("。")]),s._v(" "),a("p",[s._v("一个不存储元素的阻塞队列。每一个插入操作都必须等到另一个线程调用移除操作。否则插入操作一直处于阻塞状态。")])]),s._v(" "),a("li",[a("p",[s._v("无界队列："),a("code",[s._v("LinkedBlockingQueue")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("有界的队列："),a("code",[s._v("ArrayBlockingQueue")]),s._v("。")])])]),s._v(" "),a("h3",{attrs:{id:"_2-5-线程池应该手动创建还是自动创建？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-线程池应该手动创建还是自动创建？"}},[s._v("#")]),s._v(" 2.5 线程池应该手动创建还是自动创建？")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("手动创建更好")]),s._v("。因为手动可以让我们更加明确线程池的运行规则，避免资源耗尽的危险。")]),s._v(" "),a("li",[s._v("自动创建的线程池（也就是直接调用JDK封装好的构造函数）会带来一些问题。")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("code",[s._v("newFixedThreadPool")])])]),s._v(" "),a("p",[s._v("先创建一段代码来演示该构造函数的用法。")])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FixedThreadPoolTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//新建一个固定大小为4的线程池")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newFixedThreadPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//提交任务，并且循环1000次")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建任务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("发现输出结果一直在1-4循环。")]),s._v(" "),a("p",[s._v("另外该线程池使用的是无界队列"),a("code",[s._v("LinkedBlockingQueue")]),s._v("。所以当请求数越来越多时，如果无法及时处理完毕，也就是请求堆积的时候，容易造成占用大量的内存。也就是"),a("code",[s._v("OOM")]),s._v("。")]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("strong",[a("code",[s._v("newSingleThreadExecutor")])])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleThreadExecutor")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//顾名思义，这个线程池只有一个线程")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newSingleThreadExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这种线程池也存在同样的问题，当请求堆积的时候，容易占用大量的内存。")]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("code",[s._v("newCachedThreadPool")])])]),s._v(" "),a("p",[s._v("可缓存的线程池。是一个无界线程池，具有回收多余线程的功能。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://bee71-1302549720.cos.ap-shanghai.myqcloud.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200722182124.png",alt:""}})]),s._v(" "),a("p",[s._v("从图中可以看出，使用工作队列为"),a("code",[s._v("SynchronousQueue")]),s._v("。最大线程数是整型的最大值。如果多余线程空闲时间存货达到60秒，就会自动回收。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CachedThreadPool")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newCachedThreadPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("输出结果为：")]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".....\npool-1-thread-997\npool-1-thread-1000\npool-1-thread-998\npool-1-thread-999\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("可以看出生成了很多的线程。不过它的"),a("code",[s._v("maximumPoolSize")]),s._v("被设置成"),a("code",[s._v("Integer.MAX_VALUE")]),s._v("。这可能会创建非常多的线程，也有可能导致"),a("code",[s._v("OOM")]),s._v("。")]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("code",[s._v("newScheduledThreadPool")])])]),s._v(" "),a("p",[s._v("支持定时及周期性执行任务的线程池。")])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ScheduledThreadPool")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ScheduledExecutorService")]),s._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newScheduledThreadPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个方法是5秒后执行任务")]),s._v("\n        service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个方法是一秒后执行任务，之后以5秒一次的频率执行任务")]),s._v("\n        service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scheduleAtFixedRate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("hr"),s._v(" "),a("p",[a("strong",[s._v("正确的创建线程池的方法：")])]),s._v(" "),a("ul",[a("li",[s._v("根据不同的业务场景，自己设置线程池参数。")])]),s._v(" "),a("p",[a("strong",[s._v("线程池的线程数量设置为多少合适：")])]),s._v(" "),a("ul",[a("li",[s._v("CPU密集型（加密，hash等）：设置为CPU核心数的1-2倍。比如你是8核处理器，就设置成8-16。")]),s._v(" "),a("li",[s._v("耗时IO型（读写数据可，网络读写等）：一般设置成CPU核心数的很多倍。")]),s._v(" "),a("li",[s._v("线程数 = CPU核心数* （1 + 平均等待时间/平均工作时间）")])]),s._v(" "),a("h3",{attrs:{id:"_2-6-停止线程池的正确方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-停止线程池的正确方法"}},[s._v("#")]),s._v(" 2.6 停止线程池的正确方法")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("shutdown")]),s._v("方法")])]),s._v(" "),a("h2",{attrs:{id:"_3-线程池的拒绝策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-线程池的拒绝策略"}},[s._v("#")]),s._v(" 3.线程池的拒绝策略")]),s._v(" "),a("ul",[a("li",[s._v("任务太多，怎么拒绝呢？")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-拒绝时机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-拒绝时机"}},[s._v("#")]),s._v(" 3-1.拒绝时机")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("当Executor关闭时，提交新任务会被拒绝。")])]),s._v(" "),a("li",[a("p",[s._v("就是工作线程和使用有限边界的工作队列容量都已经饱和时，拒绝。")])])]),s._v(" "),a("h3",{attrs:{id:"_3-2-4种拒绝策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4种拒绝策略"}},[s._v("#")]),s._v(" 3-2.4种拒绝策略")]),s._v(" "),a("ul",[a("li",[s._v("**AbortPolicy：**中止策略，直接抛出一个异常。")]),s._v(" "),a("li",[s._v("**DiscardPolicy：**丢弃策略，默默地丢弃这个任务，也不告诉你。")]),s._v(" "),a("li",[s._v("**DiccardOldestPolicy：**丢弃最老的策略，把任务中存在时间最久的丢掉。")]),s._v(" "),a("li",[s._v("**CallerRunPolicy：**让提交这个任务的线程来帮忙执行。比如主线程提交的，就让他来执行。另外还能形成一种负反馈，让任务提交速度降下来。")])]),s._v(" "),a("h3",{attrs:{id:"_3-3-钩子方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-钩子方法"}},[s._v("#")]),s._v(" 3-3.钩子方法")]),s._v(" "),a("ul",[a("li",[s._v("钩子方法可以给线程池加点料。")]),s._v(" "),a("li",[s._v("放在每个任务执行的前后。")]),s._v(" "),a("li",[s._v("比如日志，统计等业务需求。")])]),s._v(" "),a("h2",{attrs:{id:"_4-executor家族成员"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-executor家族成员"}},[s._v("#")]),s._v(" 4.Executor家族成员")]),s._v(" "),a("h3",{attrs:{id:"_4-1-线程池的组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-线程池的组成部分"}},[s._v("#")]),s._v(" 4-1.线程池的组成部分")]),s._v(" "),a("ul",[a("li",[s._v("**线程池管理器：**包括创建，停止线程池等，管理线程池用的。")]),s._v(" "),a("li",[s._v("**工作线程：**用来取出任务来执行的。")]),s._v(" "),a("li",[s._v("**任务队列：**用来存放任务的队列。因为是多线程取，所以是支持并发的，所以选择线程安全的"),a("code",[s._v("BlockingQueue")]),s._v("。")]),s._v(" "),a("li",[s._v("**任务接口（Task）：**我们要执行的任务。")])]),s._v(" "),a("h3",{attrs:{id:"_4-2-executor的家族关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-executor的家族关系"}},[s._v("#")]),s._v(" 4-2.Executor的家族关系")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bee71-1302549720.cos.ap-shanghai.myqcloud.com/Snipaste_2020-08-14_16-26-47.png"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("Executor")]),s._v("：它是一个顶层接口，里面只有一个方法，用来执行任务的。")]),s._v(" "),a("li",[a("code",[s._v("ExecutorService")]),s._v("：继承"),a("code",[s._v("Executor")]),s._v("的子接口，增加了一些新方法。比如"),a("code",[s._v("shutdown")]),s._v("之类的。")]),s._v(" "),a("li",[a("code",[s._v("Executors")]),s._v("：这是一个工具类，用来快速创建线程池用的。")]),s._v(" "),a("li",[a("code",[s._v("ThreadPoolExecutor")]),s._v("：线程池。")])]),s._v(" "),a("h3",{attrs:{id:"_4-3-线程池实现任务复用的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-线程池实现任务复用的原理"}},[s._v("#")]),s._v(" 4-3.线程池实现任务复用的原理")]),s._v(" "),a("ul",[a("li",[s._v("相同的线程执行不同的任务。")]),s._v(" "),a("li",[s._v("本质上还是去调用"),a("code",[s._v("Runnable")]),s._v("的"),a("code",[s._v("run()")]),s._v("方法。")])]),s._v(" "),a("h2",{attrs:{id:"_5-线程池的状态和使用注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-线程池的状态和使用注意点"}},[s._v("#")]),s._v(" 5.线程池的状态和使用注意点")]),s._v(" "),a("h3",{attrs:{id:"_5-1-线程池的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-线程池的状态"}},[s._v("#")]),s._v(" 5-1.线程池的状态")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("running")]),s._v("：接受新任务并处理排队任务。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("shutdown")]),s._v("：不接受新任务了，但处理排队任务。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("stop")]),s._v("：不接受新任务，也不处理排队任务，并中断正在进行的任务。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("tidying")]),s._v("：所有任务都完成了， 线程池会转换到该状态，并运行"),a("code",[s._v("terminate")]),s._v("钩子方法。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("terminated")]),s._v("："),a("code",[s._v("terminate()")]),s._v("方法运行完成。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);